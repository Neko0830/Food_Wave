CREATE TABLE users (
    user_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password CHAR(64) NOT NULL,
    phone_number VARCHAR(20),
    address TEXT,
validation_status ENUM('pending, 'approved','rejected') NOT NULL DEFAULT 'pending',
    role ENUM('customer', 'owner', 'admin') NOT NULL DEFAULT 'customer'

);


CREATE TABLE restaurants (
    restaurant_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    owner_id INT(11),
    name VARCHAR(255) NOT NULL,
    location TEXT NOT NULL,
    contact_email VARCHAR(255) NOT NULL,
    contact_phone VARCHAR(20) NOT NULL,
    opening_hours VARCHAR(255) NOT NULL,
    delivery_radius INT(11) NOT NULL,
    profile_image_url VARCHAR(255),
    FOREIGN KEY (owner_id) REFERENCES users(user_id)
);

CREATE TABLE food_items (
    food_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    restaurant_id INT(11),
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    image_url VARCHAR(255),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)
);

CREATE TABLE carts (
    cart_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_id INT(11),
    restaurant_id INT(11),
    food_item_id INT(11),
    quantity INT(11),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES users(user_id),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id),
    FOREIGN KEY (food_item_id) REFERENCES food_items(food_id)
);

CREATE TABLE orders (
    order_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customer_id INT(11),
    restaurant_id INT(11),
    total_price DECIMAL(10,2),
    order_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) DEFAULT 'Pending', -- Changed ENUM to VARCHAR
    FOREIGN KEY (customer_id) REFERENCES users(user_id),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id)
);

CREATE TABLE order_details (
    order_detail_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id INT(11),
    food_item_id INT(11) NOT NULL,
    quantity INT(11) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (food_item_id) REFERENCES food_items(food_id)
);

CREATE TABLE order_status_history (
    status_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    order_id INT(11),
    status VARCHAR(50) NOT NULL,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);
